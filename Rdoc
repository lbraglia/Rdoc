#!/usr/bin/Rscript --vanilla --quiet

arg <- commandArgs(trailingOnly = TRUE)

usage <- function(){cat('
Usage:

   Rdoc string              - Use help
   Rdoc package::string     - Use help
   Rdoc -hs string          - Use help.search
   Rdoc -a string           - Use apropos
   Rdoc -v [string]         - Use vignette
   Rdoc -s string           - Use sos::findFn

')
}

## Rdoc read.csv car::recode -t text pdf

Rdoc_quit <- function(){
    usage()
    quit(save = 'no', status = 1)
}

if(0L == length(arg)){
    Rdoc_quit()
}

## ------------------
## Help (and helpers)
## ------------------

process_help_args <- function(arg){

    ## Big picture: split the string if you find -t: then process the left
    ## part as 'function' or 'package::function' and keep the right part as
    ## common type. Return a list

    allowed_types <- c('text', 'pdf')

    ## Type:
    ## 1 - find the first occurrence of -t, save what to the left and then
    ##     keep what to the right if match allowed_types
    ## 2 - If -t is not specified, look for default options or set it to text
    ## 3 - make it sure there are no not allowed_types

    first_t_index <- which(arg %in% '-t')[1]

    if (is.na(first_t_index)){ # -t not specified
        type <- getOption('help_type', 'text')
    } else { #-t is specified
        left <- arg[seq_len(first_t_index - 1)]
        right <- arg[seq(first_t_index + 1, length(arg))]
        arg <- left
        type <- allowed_types[allowed_types %in% right]
    }

    type[!(type %in% allowed_types)] <- allowed_types[1]
    type <- unique(type)

    ## Help pages
    pages_f <- function(x, types){

        splitted <- strsplit(x, '::')[[1]]
        if (length(splitted) == 1L){
            help_topic <- splitted
            help_package <- "NULL"
        } else if (length(splitted) == 2L) {
            help_package <- splitted[1]
            help_topic <- splitted[2]
        }

        lapply(types, function(x) c(help_package, help_topic, x))
    }
    lapply(arg, pages_f, types = type)

}

Help <- function(arg){
    help_args <- process_help_args(arg)

    display_help <- function(x){
        lapply(x, function(x) {
            ## see ?help on why (), searching pkg_ref
            help(topic   = (x[2]),
                 package = (if (x[1] == 'NULL') NULL else x[1]),
                 lib.loc = NULL,
                 verbose = FALSE,
                 try.all.packages = getOption('help.try.all.packages'),
                 help_type = (x[3])
                 )
        })
    }

    lapply(help_args, display_help)

}

## -----
## Main
## -----

if ('-hs' == arg[1]) {
    Help.search(arg[-1])
} else if ('-a' == arg[1]){
    Apropos(arg[-1])
} else if ('-v' == arg[1]){
    Vignette(arg[-1])
} else if ('-s' == arg[1]){
    SOS(arg[-1])
} else {
    Help(arg)
}
